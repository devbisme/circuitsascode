# Tox configuration file
# Read more under https://tox.readthedocs.org/
# THIS SCRIPT IS SUPPOSED TO BE AN EXAMPLE. MODIFY IT ACCORDING TO YOUR NEEDS!

[tox]
minversion = 3.15
envlist = py{27,36,37,38,39}


[testenv]
description = invoke pytest to run automated tests
isolated_build = True
setenv =
    TOXINIDIR = {toxinidir}
passenv =
    *
extras =
    testing
deps =
    pytest
    skidl
allowlist_externals =
    make
    find
    sphinx-build
commands =
    py{27,36,37,38,39}: pip install -e {toxinidir}
    py.test


[testenv:{clean,build}]
description =
    Build (or clean) the package in isolation according to instructions in:
    https://setuptools.readthedocs.io/en/latest/build_meta.html#how-to-use-it
    https://github.com/pypa/pep517/issues/91
    https://github.com/pypa/build
# NOTE: build is still experimental, please refer to the links for updates/issues
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
commands =
    clean: python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'
    clean: find {toxinidir} ( -name '*.erc' -or -name '*.log' -or -name '*.net' -or -name '*_lib_sklib.py' -or -name '*.kicad_pcb' ) -delete
    clean: make -C {toxinidir}/docsrc/sphinx clean
    clean: make -C {toxinidir}/docsrc/pelicansite clean
    build: python -m build .
# By default `build` produces wheels, you can also explicitly use the flags `--sdist` and `--wheel`


[testenv:{docs,devserver,doctest}]
description = invoke sphinx-build to build the docs/run doctests
setenv =
    DOCSDIR = {toxinidir}/docsrc
    BUILDDIR = {toxinidir}/docs
    docs: BUILD = publish
    devserver: BUILD = devserver
    doctest: BUILD = doctest
deps =
    ; -r {toxinidir}/docs/requirements.txt
    # ^  requirements.txt shared with Read The Docs
    # This causes doctests to fail. Don't know why.
commands =
    docs: make -C {toxinidir}/docsrc/pelicansite {env:BUILD}
    docs: make -C {toxinidir}/docsrc/sphinx html
    devserver: make -C {toxinidir}/docsrc/sphinx html
    devserver: make -C {toxinidir}/docsrc/pelicansite {env:BUILD}
    doctest: sphinx-build -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}/sphinx" "{env:BUILDDIR}" {posargs}
    doctest: find {toxinidir} ( -name '*.erc' -or -name '*.log' -or -name '*.net' -or -name '*_lib_sklib.py' -or -name '*.kicad_pcb' ) -delete


[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
skip_install = True
changedir = {toxinidir}
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
    TWINE_REPOSITORY
deps = twine
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository testpypi} dist/*
